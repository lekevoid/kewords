@keyframes matrixAnimFace {
	0% {
		color: #FFF;
		opacity: 0;
	}

	20% {
		color: #FFF;
		opacity: 1;
	}

	40% {
		color: #0F0;
		opacity: 1;
	}

	100% {
		color: #0F0;
		opacity: 0;
	}
}

@keyframes matrixAnimFaceAndStay {
	0% {
		color: #FFF;
		opacity: 0;
	}

	20% {
		color: #FFF;
		opacity: 1;
	}

	40% {
		color: #0F0;
		opacity: 1;
	}

	100% {
		color: #0F0;
		opacity: 1;
	}
}

#app.theme_matrix {
	$green: #0F0;
	$red: #F00;
	$yellow: #FF0;

	&:after {
		background: linear-gradient(to bottom, #000 60%, #020 100%);
		opacity: 1;
	}

	#params {
		transition: opacity 0.6s;

		#langs_themes .field button {
			box-shadow: 0px 0px 12px $green, 0px 0px 12px $green;
		}

		h1 {
			color: $green;
		}

		#dimensions,
		#time {
			span {
				color: $green;
			}

			.field {
				border: 2px solid $green;

				input[type="number"],
				input[type="number"] {
					background: #000 none;
					box-shadow: none;
					color: $green;
				}

				button {
					&.num_up {
						background: #030;
						border-right: 1px solid $green;
						color: $green;
					}

					&.num_down {
						background: #300;
						border-left: 1px solid $green;
						color: $green;
					}
				}
			}
		}

		#dimensions button#lock_x_y.active {
			background: #000 none;
			border: 2px solid $green;
			color: $green;
		}
	}

	#timer {
		#view_options {
			border: 2px solid $green;
			color: $green;

			button {
				background: #000;
				border: 1px solid $green;
				box-shadow: none;
				color: $green;
				transition: opacity 0.3s;

				&:disabled {
					opacity: 0.2;
				}
			}
		}

		#view_timer #time {

			.number,
			.colon {
				color: $green;
			}
		}
	}

	#actions {
		button {
			background: #000;
			border: 2px solid #000;
			box-shadow: none;
			color: #000;
			font-size: 4rem;

			&.play {
				border-color: $green;

				svg {
					filter: drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green);
				}
			}

			&.stop {
				border-color: $red;

				svg {
					filter: drop-shadow(0 0 1px $red) drop-shadow(0 0 1px $red) drop-shadow(0 0 1px $red) drop-shadow(0 0 1px $red) drop-shadow(0 0 1px $red) drop-shadow(0 0 1px $red);
				}
			}

			&.pause {
				border-color: $yellow;

				svg {
					filter: drop-shadow(0 0 1px $yellow) drop-shadow(0 0 1px $yellow) drop-shadow(0 0 1px $yellow) drop-shadow(0 0 1px $yellow) drop-shadow(0 0 1px $yellow) drop-shadow(0 0 1px $yellow);
				}
			}
		}
	}

	#dictionary {
		background-color: #010;
		border-left: 1px solid darken($green, 20);

		.btn_open {
			background-color: #010;
			border: 2px solid darken($green, 20);
			border-right: 2px #010 solid;
			opacity: 1;
			transform: translateX(calc(-100% + 1px));
			transition: opacity 0.3s;

			img {
				opacity: 0.4;
			}
		}

		&.open {
			.btn_open {
				opacity: 1;
			}
		}

		.input_word {
			border-color: $green;
		}

		.btn_search {
			background: #000;
			border: 2px solid $green;
			transition: filter 0.3s;
		}

		&.invalid {
			.input_word {
				border-color: $red;
			}

			.btn_search {
				filter: hue-rotate(-120deg) saturate(1000%);
			}
		}
	}

	#grid {
		border: 2px solid $green;
		box-shadow: none;
		opacity: 0.8;

		.row {
			.cell {
				background-color: #000;
				border: 1px solid $green;
				box-shadow: 0 0 8px inset #0F0;
			}
		}
	}

	.die {
		.face {
			background: transparent;
			border: 0 none;
			color: $green;

			&.back {
				transform: translateY(-60%);
			}

			&.top {
				transform: translateY(-120%);
			}

			&.bottom {
				transform: translateY(-180%);
			}

			&.left {
				transform: translateY(-240%);
			}

			&.right {
				transform: translateY(-300%);
			}
		}
	}

	#pauseOverlay {
		background-color: rgba(#000, 0.4);
		color: #000;
		z-index: 1000;

		svg {
			filter: drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green) drop-shadow(0 0 1px $green);
		}
	}

	&.is_running {

		#params,
		#timer {
			opacity: 0.2;
		}

		.die {
			.face {
				animation: matrixAnimFace 1.4s ease-out 0s 1 forwards;
				opacity: 0;

				&.front {
					animation: matrixAnimFaceAndStay 1.4s ease-out 1.2s 1 forwards;
				}

				&.back {
					animation-delay: 1s;
				}

				&.top {
					animation-delay: 0.8s;
				}

				&.bottom {
					animation-delay: 0.6s;
				}

				&.left {
					animation-delay: 0.4s;
				}

				&.right {
					animation-delay: 0.2s;
				}
			}
		}
	}
}
